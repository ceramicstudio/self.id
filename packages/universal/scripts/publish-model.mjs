import { writeFile } from 'node:fs/promises'
import Ceramic from '@ceramicnetwork/http-client'
import { model as profileModel } from '@datamodels/self.id-profile'
import { model as socialAccountsModel } from '@datamodels/self.id-social-accounts'
import { ModelManager } from '@glazed/devtools'
import prettierConfig from 'eslint-config-3box/prettier.config.js'
import prettier from 'prettier'

const ceramic = new Ceramic.default(process.env.CERAMIC_URL)
const manager = new ModelManager(ceramic)
manager.addJSONModel(profileModel)
manager.addJSONModel(socialAccountsModel)

const published = await manager.toPublished()
const modelFile = prettier.format(
  `// This is a file generated by the publish-model.mjs script, do not edit manually

import type { BasicProfile } from '@datamodels/self.id-profile'
import type { AlsoKnownAs } from '@datamodels/self.id-social-accounts'
import type { ModelTypeAliases, PublishedModel } from '@glazed/types'

export type ModelTypes = ModelTypeAliases<
  {
    AlsoKnownAs: AlsoKnownAs
    BasicProfile: BasicProfile
  },
  {
    alsoKnownAs: 'AlsoKnownAs'
    basicProfile: 'BasicProfile'
  }
>

export const model: PublishedModel<ModelTypes> = ${JSON.stringify(published, null, 2)}
`,
  { ...prettierConfig, parser: 'typescript' }
)
await writeFile(new URL('../src/__generated__/model.ts', import.meta.url), modelFile)
